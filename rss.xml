<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gegen Website]]></title><description><![CDATA[HI WORLD!]]></description><link>http://github.com/dylang/node-rss</link><generator>Gulp 3.9.1</generator><lastBuildDate>Fri, 25 Aug 2017 00:37:28 GMT</lastBuildDate><atom:link href="/rss.xml" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Building the Site and Publishing on GitHub]]></title><description><![CDATA[<h2 id="git-repositories">Git repositories</h2>
<p>Suppose that your GitHub user name is <code>myUserName</code>, that you want to name your new website project as <code>myProject</code> and to publish the site using the <a href="https://pages.github.com/">GitHub Pages</a> free web hosting service.  You have the choice to publish your site</p>
<ul>
<li>either as a <a href="https://help.github.com/articles/user-organization-and-project-pages/#project-pages">project site</a></li>
<li>or as a <a href="https://help.github.com/articles/user-organization-and-project-pages/#user--organization-pages">user site</a></li>
</ul>
<p>Note that only one <em>user site</em> is allowed for each GitHub account but multiple <em>project sites</em> are possible.</p>
<p>For both options (<em>project</em> or <em>user site</em>) you will need the first two of these three git repositories; for a <em>user site</em> you&#39;ll also need the third:</p>
<ol>
<li>a local repository called <code>myProject</code> cloned from <a href="https://github.com/lazy-8/base.git">https://github.com/lazy-8/base.git</a></li>
<li>a GitHub repository called <code>myProject</code> (GitHub will assign it the URL <a href="https://github.com/myUserName/myProject.git">https://github.com/myUserName/myProject.git</a>)</li>
<li>a GitHub repository called <code>myUserName.github.io</code> (the assigned URL will be <a href="https://github.com/myUserName/myUserName.git">https://github.com/myUserName/myUserName.git</a>)</li>
</ol>
<p>The local <code>myProject</code> repository will track changes you made to your source files (content, templates, stylesheets, javascript,...) and will push these to the <em>master</em> branch of the remote <code>myProject</code> on GitHub.  Note that although the <em>master</em> branch of the remote <code>myProject</code> is on GitHub it will <em>not</em> be used by GitHub Pages.  Instead, it will serve as a backup and a central repository for possible collaboration with other GitHub users.</p>
<p>What <em>will</em> be used by GitHub Pages is the <em>gh-pages</em> branch of the remote <code>myProject</code>, which will contain the built site.  At least when you are publishing a <em>project site</em>.  For a <em>user site</em> the built site will be pushed to the <em>master</em> branch of the third repository listed above, the remote <code>myUserName.github.io</code>.</p>
<h2 id="workflow">Workflow</h2>
<h3 id="setting-up-repositories-configuration">Setting up repositories, configuration</h3>
<ol>
<li>create a <code>myProject</code> repository on GitHub</li>
<li>optionally (for a <em>project site</em>) create also <code>myUserName.github.io</code> on GitHub</li>
<li>clone <code>base</code> into the local <code>myProject</code> and <code>cd</code> to it<pre><code>git clone https://github.com/lazy-8/base.git myProject; cd myProject
</code></pre></li>
<li>configure git to push the changes committed in the local <code>myProject</code> to the remote <code>myProject</code><pre><code>git remote set-url origin https://github.com/myUserName/myProject.git
</code></pre></li>
<li>set the <code>ghPagesBranch</code> and <code>ghPagesRemoteUrl</code> variables in <code>site.json</code>; this will tell the <code>gulp publish</code> task where you&#39;d like to deploy the built site<ol>
<li>for a <em>project site</em><pre><code>...
&quot;ghPagesBranch&quot;: &quot;gh-pages&quot;,
&quot;ghPagesRemoteUrl&quot;: &quot;https://github.com/myUserName/myProject.git&quot;}
</code></pre></li>
<li>for a <em>user site</em><pre><code>...
&quot;ghPagesBranch&quot;: &quot;master&quot;,
&quot;ghPagesRemoteUrl&quot;: &quot;https://github.com/myUserName/myUserName.git&quot;}
</code></pre></li>
</ol>
</li>
<li>set other variables in <code>site.json</code> like <code>title</code>, <code>description</code>, etc</li>
<li>install <code>node.js</code> packages<pre><code>npm install; bower install
</code></pre></li>
</ol>
<h3 id="building-and-publishing-the-site">Building and publishing the site</h3>
<p>Before getting ready to publish your site you probably were running the default gulp task via <code>gulp</code>, which not only watched the changes you made in the <code>edit/</code> directory but was also running a local webserver to give you immediate feedback on the changes.  In the meantime you probably also pushed your locally committed changes to the remote <code>myProject</code> GitHub repository regularly.</p>
<p>Once you are ready to publish your site on GitHub</p>
<pre><code># ensure that gulp is not already running
gulp clean
gulp build
gulp publish
</code></pre><p>The URL of the published site again depends on the type of GitHub hosting</p>
<ul>
<li>for a <em>project site</em> it&#39;s <a href="https://myUserName.github.io/myProject/github/">https://myUserName.github.io/myProject/github/</a></li>
<li>for a <em>user site</em> it&#39;s <a href="https://myUserName.github.io/myProject/">https://myUserName.github.io/myProject/</a></li>
</ul>
]]></description><link>/build-publish/</link><guid isPermaLink="false">/build-publish/</guid><pubDate>Sun, 20 Aug 2017 04:00:00 GMT</pubDate></item><item><title><![CDATA[Markdown Template]]></title><description><![CDATA[<h1 id="h1-heading-8-">h1 Heading 8-)</h1>
<h2 id="h2-heading">h2 Heading</h2>
<h3 id="h3-heading">h3 Heading</h3>
<h4 id="h4-heading">h4 Heading</h4>
<h5 id="h5-heading">h5 Heading</h5>
<h6 id="h6-heading">h6 Heading</h6>
<h2 id="horizontal-rules">Horizontal Rules</h2>
<hr>
<hr>
<hr>
<h2 id="typographic-replacements">Typographic replacements</h2>
<p>Enable typographer option to see result.</p>
<p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p>
<p>test.. test... test..... test?..... test!....</p>
<p>!!!!!! ???? ,,  -- ---</p>
<p>&quot;Smartypants, double quotes&quot; and &#39;single quotes&#39;</p>
<h2 id="emphasis">Emphasis</h2>
<p><strong>This is bold text</strong></p>
<p><strong>This is bold text</strong></p>
<p><em>This is italic text</em></p>
<p><em>This is italic text</em></p>
<p><del>Strikethrough</del></p>
<h2 id="blockquotes">Blockquotes</h2>
<blockquote>
<p>Blockquotes can also be nested...</p>
<blockquote>
<p>...by using additional greater-than signs right next to each other...</p>
<blockquote>
<p>...or with spaces between arrows.</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="lists">Lists</h2>
<p>Unordered</p>
<ul>
<li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li>
<li>Sub-lists are made by indenting 2 spaces:<ul>
<li>Marker character change forces new list start:<ul>
<li>Ac tristique libero volutpat at</li>
<li>Facilisis in pretium nisl aliquet</li>
<li>Nulla volutpat aliquam velit</li>
</ul>
</li>
</ul>
</li>
<li>Very easy!</li>
</ul>
<p>Ordered</p>
<ol>
<li>Lorem ipsum dolor sit amet</li>
<li>Consectetur adipiscing elit</li>
<li>Integer molestie lorem at massa</li>
</ol>
<ol>
<li>You can use sequential numbers...</li>
<li>...or keep all the numbers as <code>1.</code></li>
</ol>
<p>Start numbering with offset:</p>
<ol>
<li>foo</li>
<li>bar</li>
</ol>
<h2 id="code">Code</h2>
<p>Inline <code>code</code></p>
<p>Indented code</p>
<pre><code>// Some comments
line 1 of code
line 2 of code
line 3 of code
</code></pre><p>Block code &quot;fences&quot;</p>
<pre><code>Sample text here...
</code></pre><p>Syntax highlighting</p>
<pre><code class="lang-js">var foo = function (bar) {
  return bar++;
};

console.log(foo(5));
</code></pre>
<h2 id="tables">Tables</h2>
<table>
<thead>
<tr>
<th>Option</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>data</td>
<td>path to data files to supply the data that will be passed into templates.</td>
</tr>
<tr>
<td>engine</td>
<td>engine to be used for processing templates. Handlebars is the default.</td>
</tr>
<tr>
<td>ext</td>
<td>extension to be used for dest files.</td>
</tr>
</tbody>
</table>
<p>Right aligned columns</p>
<table>
<thead>
<tr>
<th style="text-align:right">Option</th>
<th style="text-align:right">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">data</td>
<td style="text-align:right">path to data files to supply the data that will be passed into templates.</td>
</tr>
<tr>
<td style="text-align:right">engine</td>
<td style="text-align:right">engine to be used for processing templates. Handlebars is the default.</td>
</tr>
<tr>
<td style="text-align:right">ext</td>
<td style="text-align:right">extension to be used for dest files.</td>
</tr>
</tbody>
</table>
<h2 id="links">Links</h2>
<p><a href="http://dev.nodeca.com">link text</a></p>
<p><a href="http://nodeca.github.io/pica/demo/" title="title text!">link with title</a></p>
<p>Autoconverted link <a href="https://github.com/nodeca/pica">https://github.com/nodeca/pica</a> (enable linkify to see)</p>
<h2 id="images">Images</h2>
<p><img src="https://octodex.github.com/images/minion.png" alt="Minion">
<img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat"></p>
<p>Like links, Images also have a footnote style syntax</p>
<p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" title="The Dojocat"></p>
<p>With a reference later in the document defining the URL location:</p>
<h2 id="plugins">Plugins</h2>
<p>The killer feature of <code>markdown-it</code> is very effective support of
<a href="https://www.npmjs.org/browse/keyword/markdown-it-plugin">syntax plugins</a>.</p>
<h3 id="-emojies-https-github-com-markdown-it-markdown-it-emoji-"><a href="https://github.com/markdown-it/markdown-it-emoji">Emojies</a></h3>
<blockquote>
<p>Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:</p>
<p>Shortcuts (emoticons): :-) :-( 8-) ;)</p>
</blockquote>
<p>see <a href="https://github.com/markdown-it/markdown-it-emoji#change-output">how to change output</a> with twemoji.</p>
<h3 id="-subscript-https-github-com-markdown-it-markdown-it-sub-superscript-https-github-com-markdown-it-markdown-it-sup-"><a href="https://github.com/markdown-it/markdown-it-sub">Subscript</a> / <a href="https://github.com/markdown-it/markdown-it-sup">Superscript</a></h3>
<ul>
<li>19^th^</li>
<li>H~2~O</li>
</ul>
<h3 id="-ins-https-github-com-markdown-it-markdown-it-ins-"><a href="https://github.com/markdown-it/markdown-it-ins">\<ins></a></h3>
<p>++Inserted text++</p>
<h3 id="-mark-https-github-com-markdown-it-markdown-it-mark-"><a href="https://github.com/markdown-it/markdown-it-mark">\<mark></a></h3>
<p>==Marked text==</p>
<h3 id="-footnotes-https-github-com-markdown-it-markdown-it-footnote-"><a href="https://github.com/markdown-it/markdown-it-footnote">Footnotes</a></h3>
<p>Footnote 1 link[^first].</p>
<p>Footnote 2 link[^second].</p>
<p>Inline footnote^[Text of inline footnote] definition.</p>
<p>Duplicated footnote reference[^second].</p>
<p>[^first]: Footnote <strong>can have markup</strong></p>
<pre><code>and multiple paragraphs.
</code></pre><p>[^second]: Footnote text.</p>
<h3 id="-definition-lists-https-github-com-markdown-it-markdown-it-deflist-"><a href="https://github.com/markdown-it/markdown-it-deflist">Definition lists</a></h3>
<p>Term 1</p>
<p>:   Definition 1
with lazy continuation.</p>
<p>Term 2 with <em>inline markup</em></p>
<p>:   Definition 2</p>
<pre><code>    { some code, part of Definition 2 }

Third paragraph of definition 2.
</code></pre><p><em>Compact style:</em></p>
<p>Term 1
  ~ Definition 1</p>
<p>Term 2
  ~ Definition 2a
  ~ Definition 2b</p>
<h3 id="-abbreviations-https-github-com-markdown-it-markdown-it-abbr-"><a href="https://github.com/markdown-it/markdown-it-abbr">Abbreviations</a></h3>
<p>This is HTML abbreviation example.</p>
<p>It converts &quot;HTML&quot;, but keep intact partial entries like &quot;xxxHTMLyyy&quot; and so on.</p>
<p>*[HTML]: Hyper Text Markup Language</p>
<h3 id="-custom-containers-https-github-com-markdown-it-markdown-it-container-"><a href="https://github.com/markdown-it/markdown-it-container">Custom containers</a></h3>
<p>::: warning
<em>here be dragons</em>
:::</p>
]]></description><link>/markdown/</link><guid isPermaLink="false">/markdown/</guid><pubDate>Mon, 31 Jul 2017 04:00:00 GMT</pubDate></item><item><title><![CDATA[Configuring your Project]]></title><description><![CDATA[<h2 id="making-this-project-yours">Making this Project Yours</h2>
<ol>
<li>Edit <code>site.json</code> with your credentials (see <strong>Main Variables</strong> below)</li>
<li>Open <code>./edit/sass/layout.scss</code> and start with a blank slate by deleting all rules inside it. Go for it.</li>
<li>Also, take control of <code>./edit/sass/style.scss</code> by adding as many project imports you need.</li>
<li><a href="editing">Learn how to edit content</a></li>
<li><a href="github">Create your own git repository</a></li>
</ol>
<h2 id="main-variables">Main Variables</h2>
<p>The metadata file <code>site.json</code> contains all configuration required by your site. The following properties are used by the generator.
You are free to add properties to this file for use in your Handlebars templates.</p>
<table>
<thead>
<tr>
<th>Value</th>
<th>Type</th>
<th>Priority</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>string</td>
<td>required</td>
<td>the title of your site</td>
</tr>
<tr>
<td>description</td>
<td>string</td>
<td>required</td>
<td>a description of your site</td>
</tr>
<tr>
<td>url</td>
<td>string</td>
<td>required</td>
<td>the URL of your site</td>
</tr>
<tr>
<td>rss</td>
<td>string</td>
<td>required</td>
<td>the RSS feed XML file</td>
</tr>
<tr>
<td>maxItems</td>
<td>number</td>
<td>optional</td>
<td>the number to use for pagination</td>
</tr>
<tr>
<td>editFolder</td>
<td>string</td>
<td>required</td>
<td>folder where editable files reside (defaults to <code>./edit</code>)</td>
</tr>
<tr>
<td>distFolder</td>
<td>string</td>
<td>required</td>
<td>folder where publishable files reside (defaults to <code>./dist</code>)</td>
</tr>
<tr>
<td>authors</td>
<td>object</td>
<td>optional</td>
<td>an map of authors with metadata</td>
</tr>
<tr>
<td>concatJs</td>
<td>array</td>
<td>optional</td>
<td>a list of javascript files to combine and minify</td>
</tr>
<tr>
<td>styleSheet</td>
<td>string</td>
<td>optional</td>
<td>the name of your main CSS file created by the sass task</td>
</tr>
<tr>
<td>imageCompression</td>
<td>boolean</td>
<td>optional</td>
<td>a boolean value to enable/disable image compresssion on build</td>
</tr>
<tr>
<td>uncssIgnore</td>
<td>array</td>
<td>optional</td>
<td>a list of selectors that uncss should ignore (for example &quot;.container&quot; or &quot;#my-element&quot;)</td>
</tr>
<tr>
<td>ghPagesBranch</td>
<td>string</td>
<td>optional</td>
<td><code>gh-pages</code> for a project site and <code>master</code> for a user site</td>
</tr>
<tr>
<td>ghPagesRemoteUrl</td>
<td>string</td>
<td>optional</td>
<td><code>https://github.com/myUserName/myProject.git</code> for a project site and <code>https://github.com/myUserName/myUserName.git</code> for a user site</td>
</tr>
</tbody>
</table>
]]></description><link>/configuration/</link><guid isPermaLink="false">/configuration/</guid><pubDate>Fri, 21 Jul 2017 04:00:00 GMT</pubDate></item><item><title><![CDATA[Handlebars Editing]]></title><description><![CDATA[<h2 id="important-folders">Important Folders</h2>
<table>
<thead>
<tr>
<th>Path</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>edit/content</code></td>
<td>the content folder for the markdown files including some sample ones</td>
</tr>
<tr>
<td><code>edit/images</code></td>
<td>images to be compressed and converted</td>
</tr>
<tr>
<td><code>edit/sass</code></td>
<td>where your sass files go: default is <code>style.scss</code></td>
</tr>
<tr>
<td><code>edit/templates</code></td>
<td>a set of Handlebar templates for creating pages and posts</td>
</tr>
</tbody>
</table>
<h2 id="pages-and-posts">Pages and posts</h2>
<p>Pages and posts must created in either <code>edit/content/pages</code> or <code>edit/content/posts</code> folders.</p>
<p>Pages and posts are Markdown files with a YAML front-matter block. The front matter must be the first thing in the file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</p>
<pre><code>---
title: Home
template: index.hbs
---

The rest of the template goes here as markdown text.
</code></pre><p>Between these triple-dashed lines, you can set predefined variables (see below). These variables will then be available to you in any Handlebars templates or includes that the page or post in question relies on.</p>
<table>
<thead>
<tr>
<th>Frontmatter</th>
<th>Priority</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>required</td>
<td>the title of the page or post</td>
</tr>
<tr>
<td>template</td>
<td>required</td>
<td>the Handlebars template to use to compile the page or post</td>
</tr>
<tr>
<td>slug</td>
<td>optional</td>
<td>the URL slug which is used as the folder name when the page or post is built</td>
</tr>
<tr>
<td>date</td>
<td>optional</td>
<td>used for posts and in the format <code>YYYY-MM-DD</code></td>
</tr>
<tr>
<td>author</td>
<td>optional</td>
<td>used for posts and the author key in the <code>site.json</code> file</td>
</tr>
<tr>
<td>status</td>
<td>optional</td>
<td>set to &#39;draft&#39; to ignore the page or post when running the generator</td>
</tr>
</tbody>
</table>
<h2 id="managing-assets">Managing Assets</h2>
<p>Images, javascripts, fonts etc can all be added to the <code>edit/</code> folder. You are free to create directories for these and name them accordingly.</p>
<p>Content is created in the <code>edit/content/pages</code> or <code>edit/content/posts</code>.</p>
<p>The generator is opinionated in that it expects certain files in particular directories.</p>
<h2 id="using-partials">Using Partials</h2>
<ol>
<li>Write partial as HTML (not markdown) template</li>
<li>Save partial on <code>edit/templates/partials</code> folder as an <code>*.hbs</code> file</li>
<li>Call it with <code>{{&gt; FileName}}</code> (for instance, a partial named <code>header.hbs</code> is called with <code>{{&gt; header}}</code>)</li>
</ol>
<h2 id="helpers">Helpers</h2>
<p>Helpers are available to your Handlebar templates and partials, these are:</p>
<table>
<thead>
<tr>
<th>Helper</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>date</td>
<td>format a date in a particular format (uses Moment)</td>
<td><code>{{date format=&quot;MMM Do, YYYY&quot;}}</code></td>
</tr>
<tr>
<td>excerpt</td>
<td>returns an excerpt of the text of your content, use &#39;words&#39; or &#39;characters&#39; to set the length</td>
<td><code>{{excerpt words=&quot;50&quot;}}</code></td>
</tr>
<tr>
<td>content</td>
<td>returns an excerpt of content and is tag aware, use &#39;words&#39; or &#39;characters&#39; to set the length</td>
<td><code>{{content words=&quot;50&quot;}}</code></td>
</tr>
<tr>
<td>resolve</td>
<td>resolves the path to an asset relative to the site root</td>
<td><code>{{resolve &quot;/favicon.ico&quot;}}</code></td>
</tr>
</tbody>
</table>
]]></description><link>/editing/</link><guid isPermaLink="false">/editing/</guid><pubDate>Sat, 15 Jul 2017 04:00:00 GMT</pubDate></item></channel></rss>